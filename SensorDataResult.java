/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lustrum;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Random;
/**
 *
 * @author David Kuhn
 */
public class SensorDataResult extends javax.swing.JFrame {
	
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;

    /**
     * Creates new form SensorDataResult
     */
    static int id = 0;
    
    public SensorDataResult() {
        initComponents();
        setData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sensor Data Results");

        jLabel1.setText("Car Speed");

        jLabel2.setText("Rain");

        jLabel3.setText("HearRate");

        jLabel4.setText("Sleep Hours");

        jLabel5.setText("Ambient Temperature");

        jLabel6.setText("Safe Distance");

        jLabel7.setText("Notification");

        jLabel8.setText("jLabel8");

        jLabel9.setText("jLabel9");

        jLabel10.setText("jLabel10");

        jLabel11.setText("jLabel11");

        jLabel12.setText("jLabel12");

        jLabel13.setText("jLabel13");

        jLabel14.setText("jLabel14");

        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel15.setText("Sensor Data Result");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jLabel15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jButton1)))
                .addContainerGap(249, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        id = id +1; 
        setData();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SensorDataResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SensorDataResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SensorDataResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SensorDataResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SensorDataResult().setVisible(true);
            }
        });
    }
    
        public void setData()
    {

		
		System.out.println("id: "+id);

			try
			{
				Class.forName("com.mysql.jdbc.Driver");
	        	Connection conn = DriverManager.getConnection(
	        			"jdbc:mysql://localhost/lustrum", "root", "");
	    		
	        	/// logic to retrieve sensor data and generate notification
	        	Statement st = conn.createStatement();
				ResultSet resultset;
				resultset = st
						.executeQuery("select * from sensorData where id='"
								+ id + "'");
	    		
				
				double[] sensorData = new double[5];
				resultset.next();
				sensorData[0] = resultset.getDouble(2);
				sensorData[1] = resultset.getDouble(3);
				sensorData[2] = resultset.getDouble(4);
				sensorData[3] = resultset.getDouble(5);
				sensorData[4] = resultset.getDouble(6);
				

for(double d:sensorData)
{
	System.out.println(d);
}
				
				
				double[] analysedData = generateAnalysisResult(sensorData);
				String result = "";
				String safeDistance = "";
				
				for(int i =0;i<2;i++)
				{
					switch(i)
					{
					case 0 :
						safeDistance = ""+analysedData[i];
					break;
					
					case 1:
						switch((int)analysedData[i])
						{
						case -1:
							result = "Vehicle halt, System contacting Emergency Services";
							break;
						
						case 0:
							result = "No Action";
							break;
							
						case 1:
							result = "15 minute break suggested ";
							break;
							
						case 2:
							result = "5 minute break suggested ";
							break;
							
						case 3:
							result = "10 minute break suggested ";
							break;
						}
						
					}
				}

System.out.println("safeDistance: "+safeDistance);
System.out.println("result: "+result);
				
	    		jLabel8.setText(""+sensorData[0]);
	    		jLabel9.setText(""+sensorData[1]);
	    		jLabel10.setText(""+sensorData[2]);
	    		jLabel11.setText(""+sensorData[3]);
	    		jLabel12.setText(""+sensorData[4]);
	    		jLabel13.setText(""+safeDistance);
	    		jLabel14.setText(""+result);
	    		
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
    }
        
        double[] generateAnalysisResult(double[] sensorData)
	{
		double frontCarSafeDistance = sensorData[0] * 2.5;
		double temp[] = new double[2];
		//System.out.println(sensorData[1] );
		if(sensorData[2] >=180 || sensorData[2] < 40)
		{
			temp[1] = -1; // Halt vehicle, contact Emergency services. 
		}

		else if(sensorData[2] >=60 && sensorData[2] <= 100 && sensorData[3] >=6)
		{
			temp[1] = 0;  // Nothing
			if(sensorData[4] >= 7)
			{
				
			}
			else
			{
				frontCarSafeDistance = frontCarSafeDistance*1.05;
			}
		}
		else if(sensorData[2] >=60 && sensorData[2] <= 100 && sensorData[3] <6)
		{
			temp[1] = 1;  // 15 min break
			if(sensorData[4] >= 7)
			{
				frontCarSafeDistance = frontCarSafeDistance*1.15;
			}
			else
			{
				temp[1] = 1; // 15 min break
				frontCarSafeDistance = frontCarSafeDistance*1.2;
			}
		}
		else if(sensorData[2] >40 && sensorData[2] < 60 && sensorData[3] >=6)
		{
			temp[1] = 0;  // Nothing
			if(sensorData[4] >= 7)
			{
				
			}
			else
			{
				frontCarSafeDistance = frontCarSafeDistance*1.05;
			}
		}
		else if(sensorData[2] >=40 && sensorData[2] <60 && sensorData[3] <6)
		{
			temp[1] = 2;  // 5 min break
			if(sensorData[4] >= 7)
			{
				frontCarSafeDistance = frontCarSafeDistance*1.05;
			}
			else
			{
				frontCarSafeDistance = frontCarSafeDistance*1.1;
			}
		}
		else if(sensorData[2] >100 && sensorData[2] <180 && sensorData[3] >=6)
		{
			temp[1] = 0;  // Nothing
			if(sensorData[4] >= 7)
			{
				
			}
			else
			{
				
				frontCarSafeDistance = frontCarSafeDistance*1.15;
			}
		}
		else if(sensorData[2] >100 && sensorData[2] <180 && sensorData[3] <6)
		{
			temp[1] = 3;  // 10 min break
			if(sensorData[4] >= 7)
			{
				frontCarSafeDistance = frontCarSafeDistance*1.05;
			}
			else
			{
				
				frontCarSafeDistance = frontCarSafeDistance*1.1;
			}
		}
		if(sensorData[1] == 0.0)
		{
			frontCarSafeDistance = frontCarSafeDistance*1.1;
		}
		
		temp[0] = frontCarSafeDistance;
		
		return temp;
		
	}
  
}
